"""
Django settings for stdweb project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os

from pathlib import Path
from decouple import config # Getting environment from .env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='some-secret-key', cast=str)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'crispy_forms',
    'crispy_bootstrap5',
    'el_pagination',
    'stdweb',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'stdweb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'stdweb/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'stdweb.context_processors.expose_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'stdweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# URL for login form
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = 'index'

# Paths for STDWeb
DATA_PATH = config('DATA_PATH', default='data/')
TASKS_PATH = config('TASKS_PATH', default='tasks/')

# Messages
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: "danger",
    messages.DEBUG: "secondary",
}


# Celery
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_BROKER_URL = 'redis://localhost/'
CELERY_TIMEZONE = TIME_ZONE
CELERY_RESULT_BACKEND = 'redis://localhost/'

# Caching
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
    },
    # "default": {
    #     "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
    #     "LOCATION": "unique-snowflake",
    # }
}

# Settings for STDPipe

# Temporary folder
STDPIPE_TMPDIR = config('STDPIPE_TMPDIR', default=None)
# Path to Astrometry.Net executable
STDPIPE_SOLVE_FIELD = config('STDPIPE_SOLVE_FIELD', default=None)
# Path to Astrometry.Net config
STDPIPE_SOLVE_FIELD_CONFIG = config('STDPIPE_SOLVE_FIELD_CONFIG', default=None)
# Path to SExtractor executable
STDPIPE_SEXTRACTOR = config('STDPIPE_SEXTRACTOR', default=None)
# Path to SCAMP executable
STDPIPE_SCAMP = config('STDPIPE_SCAMP', default=None)
# Path to PSFEx executable
STDPIPE_PSFEX = config('STDPIPE_PSFEX', default=None)
# Path to PSFEx executable
STDPIPE_HOTPANTS = config('STDPIPE_HOTPANTS', default=None)
# Path to SWarp executable
STDPIPE_SWARP = config('STDPIPE_SWARP', default=None)
# Path to store PS1 download cache (if not set, use task-local cache)
STDPIPE_PS1_CACHE = config('STDPIPE_PS1_CACHE', default=None)

# SkyPortal API token
SKYPORTAL_TOKEN = config('SKYPORTAL_TOKEN', default=None)
